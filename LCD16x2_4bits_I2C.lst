C51 COMPILER V9.01   LCD16X2_4BITS_I2C                                                     04/18/2024 12:44:32 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD16X2_4BITS_I2C
OBJECT MODULE PLACED IN .\LCD16x2_4bits_I2C.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\CommunicateLCD\LCD16x2-4bits-I2C\LCD16x2_4bits_I2C.c BROWSE DEBUG OBJ
                    -ECTEXTEND PRINT(.\LCD16x2_4bits_I2C.lst) OBJECT(.\LCD16x2_4bits_I2C.obj)

line level    source

   1          #include"LCD16x2_4bits_I2C.h"
   2          #include"E:\Embbedded-interview-T4\8051\Lib\Delay.h"
   3          
   4          unsigned char slave_add;
   5          
   6          sbit scl=P1^0;
   7          sbit sda=P1^1;
   8          
   9          void i2c_start(void)
  10          {
  11   1              sda=1;
  12   1              scl=1;
  13   1              Delay_ms(5);
  14   1              sda=0;
  15   1              Delay_ms(5);
  16   1              scl = 0;
  17   1      }
  18          
  19          void i2c_stop(void)
  20          {
  21   1              scl=0;
  22   1              sda=0;
  23   1              Delay_ms(5);
  24   1              scl=1;
  25   1              Delay_ms(5);
  26   1              sda=1;
  27   1      }
  28          
  29          void LCD_Slave(unsigned char slave)
  30          {
  31   1              slave_add=slave;
  32   1      }
  33          
  34          void i2c_ACK(void)
  35          {
  36   1              scl=0;
  37   1              sda=1;
  38   1              scl=1;
  39   1              while(sda);
  40   1      }
  41          
  42          void i2c_write(unsigned char dat)
  43          {
  44   1              unsigned char i;
  45   1              for(i=0;i<8;i++)
  46   1              {
  47   2              scl=0;//scl dat xuong muc thap de chuan bi cho viec truyen bit tiep theo
  48   2              sda=(dat&(0x80))?1:0;//du lieu se dc ghi vao day sda, neu bang 1 thì sda se la muc cao
  49   2                                                              //con bang 0 thi sda se la muc thap.
  50   2              //dat: 1010.0000 & 1000.0000 = 1000.0000 => sda = 1
  51   2              dat <<= i;// 1010.0000 << 1 = 0100.0000
  52   2              Delay_ms(5);
  53   2              scl=1;
  54   2              Delay_ms(5);
C51 COMPILER V9.01   LCD16X2_4BITS_I2C                                                     04/18/2024 12:44:32 PAGE 2   

  55   2              }
  56   1      }
  57          
  58          void lcd_send_cmd(unsigned char cmd)
  59          {
  60   1              unsigned char cmd_l,cmd_u;
  61   1              
  62   1              cmd_l=(cmd<<4)&0xf0;
  63   1              cmd_u=(cmd &0xf0);//0
  64   1              
  65   1              i2c_start();                     //BL EN RW RS 1 1 0 0
  66   1              i2c_write(slave_add);
  67   1              i2c_ACK();
  68   1              i2c_write(cmd_u|0x0C);
  69   1              i2c_ACK(); 
  70   1              Delay_ms(5);
  71   1              i2c_write(cmd_u|0x08); // 1 0 0 0
  72   1              i2c_ACK();
  73   1              Delay_ms(5);
  74   1              i2c_write(cmd_l|0x0C);   // 1 1 0 0
  75   1              i2c_ACK();
  76   1              Delay_ms(5);
  77   1              i2c_write(cmd_l|0x08);
  78   1              i2c_ACK();
  79   1              Delay_ms(5);
  80   1              i2c_stop();
  81   1      }
  82          
  83          void LCD_Send_Data(unsigned char dataw)// 1 1 0 1
  84          {
  85   1              unsigned char dataw_l,dataw_u;
  86   1              dataw_l=(dataw<<4)&0xf0;
  87   1              dataw_u=(dataw &0xf0);
  88   1              i2c_start();
  89   1              i2c_write(slave_add);
  90   1              i2c_ACK();
  91   1              i2c_write(dataw_u|0x0D);//BL EN RW RS   1 1 0 1
  92   1      //gui 4 bit cao den man hinh LCD, cai dat cac chan P0->p4 de gui data hoac lenh
  93   1              i2c_ACK();
  94   1              Delay_ms(5);
  95   1              i2c_write(dataw_u|0x09);// 1 0 0 1
  96   1      //Sau khi chuyen data xong ta chuyen chan EN de cho phep du lieu doc/ghi cho man hinh lcd khi chuyen tu ca
             -o xuong thap 
  97   1              i2c_ACK();
  98   1              Delay_ms(5);
  99   1              i2c_write(dataw_l|0x0D); 
 100   1      //gui 4 bit thap den man hinh LCD, cai dat cac chan P0->p4 de gui data hoac lenh
 101   1              i2c_ACK();
 102   1              Delay_ms(5);
 103   1              i2c_write(dataw_l|0x09);
 104   1      //Sau khi chuyen data xong ta chuyen chan EN de cho phep du lieu doc/ghi cho man hinh lcd khi chuyen tu ca
             -o xuong thap 
 105   1              i2c_ACK();
 106   1              Delay_ms(5);
 107   1              i2c_stop();
 108   1      }
 109          
 110          void LCD_Send_String(unsigned char *p)
 111          {
 112   1              while(*p != '\0')
 113   1              LCD_Send_Data(*p++);
 114   1      }
C51 COMPILER V9.01   LCD16X2_4BITS_I2C                                                     04/18/2024 12:44:32 PAGE 3   

 115          
 116          
 117          void LCD_Init()
 118          {
 119   1              lcd_send_cmd(0x02);     // Return home
 120   1              lcd_send_cmd(0x28);     // 4 bit mode
 121   1              lcd_send_cmd(0x0C);     // Display On , cursor off
 122   1              lcd_send_cmd(0x06);     // Increment Cursor (shift cursor to right)
 123   1              lcd_send_cmd(0x01); // clear display
 124   1      }
 125          
 126          void LCD_Gotoxy (int col, int row)
 127          {
 128   1              int pos_Addr;
 129   1              if(row == 1) 
 130   1              {
 131   2                      pos_Addr = 0x80 + row - 2 + col;
 132   2              }
 133   1              else
 134   1              {
 135   2                      pos_Addr = 0x80 | (0x40 + col - 1);
 136   2              }
 137   1              lcd_send_cmd(pos_Addr);
 138   1      }
 139          
 140          void LCD_Send_Number(int number)
 141          {
 142   1              if(number <= 9)
 143   1              {
 144   2                      LCD_Send_Data(number + 48);
 145   2              }
 146   1              else if(number > 9 && number < 100)
 147   1              {
 148   2                      LCD_Send_Data(number/10 + 48);
 149   2                      LCD_Send_Data(number%10 + 48);
 150   2              }
 151   1              else if(number > 99 && number < 1000)
 152   1              {
 153   2                      LCD_Send_Data(number/100 + 48);
 154   2                      LCD_Send_Data(number/10%10 + 48);
 155   2                      LCD_Send_Data(number%10 + 48);
 156   2              }
 157   1              else if(number > 999 && number < 10000)
 158   1              {
 159   2                      LCD_Send_Data(number/1000 + 48);
 160   2                      LCD_Send_Data(number/100%10 + 48);
 161   2                      LCD_Send_Data(number/10%10 + 48);
 162   2                      LCD_Send_Data(number%10 + 48);
 163   2              }
 164   1      }
 165          
 166          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    645    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.01   LCD16X2_4BITS_I2C                                                     04/18/2024 12:44:32 PAGE 4   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
